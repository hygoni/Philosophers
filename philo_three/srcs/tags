!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
clear	philo.c	/^int				clear(t_data *data)$/;"	f
current_ms	philo.c	/^uint64_t		current_ms(void)$/;"	f
do_eat	action.c	/^void	do_eat(t_philo *philo)$/;"	f
do_sleep	action.c	/^void	do_sleep(t_philo *philo)$/;"	f
do_think	action.c	/^void	do_think(t_philo *philo)$/;"	f
error_ret	main.c	/^int		error_ret(char *msg, int ret)$/;"	f
ft_atoi	ft2.c	/^int	ft_atoi(const char *str)$/;"	f
ft_putchar	ft.c	/^void	ft_putchar(char c)$/;"	f
ft_putnbr	ft.c	/^void	ft_putnbr(uint64_t n)$/;"	f
ft_putstr	ft.c	/^void	ft_putstr(char *str)$/;"	f
g_data	main.c	/^t_data		g_data;$/;"	v
init	philo.c	/^int				init(t_data *data)$/;"	f
lock	action.c	/^void	lock(t_philo *philo)$/;"	f
main	main.c	/^int		main(int argc, char **argv)$/;"	f
monitor	philo2.c	/^void			*monitor(void *ptr)$/;"	f
monitor_starvation	philo.c	/^void			*monitor_starvation(void *ptr)$/;"	f
parse	main.c	/^int		parse(t_data *data, int argc, char **argv)$/;"	f
philosopher	philo.c	/^void			*philosopher(void *ptr)$/;"	f
print	ft.c	/^void	print(sem_t *lock, uint64_t timestamp, int philo_number, char *action)$/;"	f
run_philo	main.c	/^int		run_philo(t_philo **philos_out, pthread_t **threads_out)$/;"	f
stop_if_dead	action2.c	/^void		stop_if_dead(void)$/;"	f
unlock	action.c	/^void	unlock(void)$/;"	f
